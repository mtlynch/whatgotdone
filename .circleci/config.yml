version: 2.1
commands:
  early_return_for_forked_pull_requests:
    description: >-
      If this build is from a fork, stop executing the current job and return success.
      This is useful to avoid steps that will fail due to missing environment
      variables.
    steps:
      - run:
          name: Early return if this build is from a forked PR
          command: |
            if [ -n "$CIRCLE_PR_NUMBER" ]; then
              echo "Nothing to do for forked PRs, so marking this step successful"
              circleci step halt
            fi
jobs:
  build-frontend:
    docker:
      - image: circleci/node:9.11.2-stretch
    steps:
      - checkout
      - run:
          name: Download npm packages
          command: npm --prefix ./frontend install
      - run:
          name: Lint client
          command: npm --prefix ./frontend run lint
      - run:
          name: Unit test client
          command: npm --prefix ./frontend run test:unit
      - run:
          name: Build production frontend
          command: npm --prefix ./frontend run build
      - persist_to_workspace:
          root: ./
          paths:
            - ./frontend/dist
  test-backend:
    docker:
      - image: circleci/golang:1.11
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Test go packages
          command: go test -v ./...
  integration:
    machine: true
    steps:
      - checkout
      - run:
          name: Perform integration tests.
          command: dev-scripts/run-integration-tests
      - store_artifacts:
          path: integration/cypress/videos
      - store_artifacts:
          path: integration/cypress/screenshots
  e2e:
    machine: true
    steps:
      - early_return_for_forked_pull_requests
      - checkout
      - run:
          name: Retrieve staging GCP credentials from CircleCI
          command: |
            echo "$SERVICE_ACCOUNT_STAGING" | \
              base64 --decode > service-account-creds-staging.json
      - run:
          name: Retrieve staging UserKit secret key from CircleCI
          command: |
            echo "USERKIT_SECRET=${USERKIT_SECRET_STAGING}" \
              > e2e/staging-secrets.env
      - run:
          name: Perform end-to-end tests.
          command: dev-scripts/run-e2e-tests
      - store_artifacts:
          path: e2e/cypress/videos
      - store_artifacts:
          path: e2e/cypress/screenshots
  deploy:
    docker:
      - image: google/cloud-sdk:265.0.0
    environment:
      GCLOUD_PROJECT: whatgotdone
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Retrieve CSRF secret and UserKit secret key from CircleCI
          command: |
            echo "env_variables:" > env_variables.yaml && \
            echo "  CSRF_SECRET_SEED: '${CSRF_SECRET_SEED}'" >> env_variables.yaml && \
            echo "  USERKIT_SECRET: '${USERKIT_SECRET_PROD}'" >> env_variables.yaml
      - run:
          name: Retrieve client secret from CircleCI
          command: |
            echo "$CLIENT_SECRET" | \
              base64 --decode > "${HOME}/client-secret.json"
      - run:
          name: Authenticate gcloud
          command: |
            gcloud auth activate-service-account \
              --key-file "${HOME}/client-secret.json"
      - run:
          name: Configure gcloud project
          command: gcloud config set project "${GCLOUD_PROJECT}"
      - run:
          name: Deploy to AppEngine
          command: gcloud --quiet app deploy --promote
workflows:
  version: 2
  test-deploy:
    jobs:
      - build-frontend
      - test-backend
      - integration
      - e2e
      - deploy:
          requires:
            - build-frontend
            - test-backend
            - integration
            - e2e
          filters:
            branches:
              only: master
