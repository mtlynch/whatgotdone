version: 2.1
commands:
  early_return_for_forked_pull_requests:
    description: >-
      If this build is from a fork, stop executing the current job and return success.
      This is useful to avoid steps that will fail due to missing environment
      variables.
    steps:
      - run:
          name: Early return if this build is from a forked PR
          command: |
            if [ -n "$CIRCLE_PR_NUMBER" ]; then
              echo "Nothing to do for forked PRs, so marking this step successful"
              circleci step halt
            fi
jobs:
  check_whitespace:
    docker:
      - image: cimg/base:2021.04
    resource_class: small
    steps:
      - checkout
      - run:
          name: Check for trailing whitespace
          command: ./dev-scripts/check-trailing-whitespace
      - run:
          name: Check that all text files end in a trailing newline
          command: ./dev-scripts/check-trailing-newline
  build-frontend:
    docker:
      - image: node:12.18.4-alpine
    steps:
      - checkout
      - run:
          name: Download npm packages
          command: npm --prefix ./frontend install
      - run:
          name: Check JavaScript formatting
          command: npm --prefix ./frontend run check-format
      - run:
          name: Lint client
          command: npm --prefix ./frontend run lint
      - run:
          name: Unit test client
          command: npm --prefix ./frontend run test:unit
      - run:
          name: Build production frontend
          command: npm --prefix ./frontend run build
      - persist_to_workspace:
          root: ./
          paths:
            - ./frontend/dist
  test-backend:
    docker:
      - image: cimg/go:1.16
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Test go packages
          command: dev-scripts/run-go-tests
      - store_artifacts:
          path: backend/.coverage.html
      - run:
          name: Verify golang formatting
          command: dev-scripts/check-go-formatting
  integration:
    resource_class: xlarge
    machine:
      # Choose an explicit machine image so that we get the latest version of
      # docker-compose.
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run:
          name: Retrieve integration service account credentials (JSON) from CircleCI
          command: |
            echo "$INTEGRATION_CLIENT_SECRET" | \
              base64 --decode > gcp-service-account-integration.json
      - run:
          name: Perform integration tests.
          command: dev-scripts/run-integration-tests
      - store_artifacts:
          path: integration/cypress/videos
      - store_artifacts:
          path: integration/cypress/screenshots
  deploy:
    docker:
      - image: cimg/base:2020.01
    resource_class: small
    environment:
      # The flyctl changes too much to use a specific version, so use the latest for the
      # time being.
      # https://github.com/superfly/flyctl/issues/394#issuecomment-815890166
      FLYCTL_VERSION: "latest"
    steps:
      - checkout
      - run:
          name: Retrieve Google Analytics service account client secret from CircleCI
          command: |
            echo "$GOOGLE_ANALYTICS_SERVICE_ACCOUNT_PROD" | \
              base64 --decode > gcp-service-account-prod.json
      - run:
          name: Install flyctl
          command: curl -L https://fly.io/install.sh | sh -s "${FLYCTL_VERSION}"
      - run:
          name: Deploy to fly.io
          command: |
            "${HOME}/.fly/bin/flyctl" deploy --access-token "${FLY_ACCESS_TOKEN}"
workflows:
  version: 2
  test-deploy:
    jobs:
      - check_whitespace
      - build-frontend
      - test-backend
      - integration
      - deploy:
          requires:
            - build-frontend
            - test-backend
            - integration
          filters:
            branches:
              only: master
